import os
from dotenv import load_dotenv
import telebot
from gtm_service import predict_image_class, recycling_tips

load_dotenv()
TG_TOKEN = os.getenv('TG_TOKEN')

bot = telebot.TeleBot(TG_TOKEN)

@bot.message_handler(commands=['start'])
def start_command(message):
    text = (
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n'
        '–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –º—É—Å–æ—Ä–∞ –ø–æ —Ñ–æ—Ç–æ ‚ôªÔ∏èüóëÔ∏è\n\n'
        'üì∏ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî –∏ —è –ø–æ–¥—Å–∫–∞–∂—É, —á—Ç–æ —ç—Ç–æ –∑–∞ –æ—Ç—Ö–æ–¥ –∏ –∫–∞–∫ –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å üåç\n\n'
        'üîç *–í–∞–∂–Ω–æ:* —è –ª—É—á—à–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—é, –µ—Å–ª–∏ –Ω–∞ —Ñ–æ—Ç–æ –∏–∑–æ–±—Ä–∞–∂—ë–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤–∏–¥ –º—É—Å–æ—Ä–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –±–∞—Ç–∞—Ä–µ–π–∫–∞, –æ–¥–Ω–∞ –±—É—Ç—ã–ª–∫–∞ –∏–ª–∏ –æ–¥–Ω–∞ –ø–∞—Ä–∞ –æ–±—É–≤–∏.\n'
        '–ï—Å–ª–∏ –Ω–∞ —Ñ–æ—Ç–æ —Å—Ä–∞–∑—É –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ ‚Äî —è –º–æ–≥—É –∑–∞–ø—É—Ç–∞—Ç—å—Å—è üôà\n\n'
        '–î–∞–≤–∞–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º—É—Å–æ—Ä –≤–º–µ—Å—Ç–µ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–ª–µ–∑–Ω–æ! üíö'
        )
    bot.send_message(message.chat.id, text)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    temp_message = bot.reply_to(message, '–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ...')
    file_info = bot.get_file(message.photo[-1].file_id)
    file_name = file_info.file_path.split('/')[-1]
    image_path= f'images/{file_name}'
    
    downloaded_file = bot.download_file(file_info.file_path)
    with open(image_path, 'wb') as file:
        file.write(downloaded_file)
        
    image_class, percentage_probability = predict_image_class(image_path)    
    
    bot.delete_message(message.chat.id, temp_message.message_id)
    bot.reply_to(message, f'–° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é {percentage_probability}% –Ω–∞ —Ñ–æ—Ç–æ {image_class.lower()}')
    
    if image_class is None:
        bot.reply_to(message, "ü§î –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ.")
    else:
        tip = recycling_tips.get(image_class, "‚ÑπÔ∏è –£–≤—ã, —É –º–µ–Ω—è –Ω–µ—Ç —Å–æ–≤–µ—Ç–∞ –ø–æ —ç—Ç–æ–º—É –≤–∏–¥—É –º—É—Å–æ—Ä–∞.")
        response = f"‚úÖ –ù–∞ —Ñ–æ—Ç–æ: *{image_class.lower()}* (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å {percentage_probability}%).\n\n{tip}"
        bot.reply_to(message, response, parse_mode='Markdown')
    
    os.remove(image_path)
    
bot.infinity_polling()